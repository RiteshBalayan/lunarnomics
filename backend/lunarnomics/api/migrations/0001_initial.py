# Generated by Django 5.0.4 on 2024-05-04 21:58

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='article_images/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('order', models.PositiveIntegerField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Paragraph',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('order', models.PositiveIntegerField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cite', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company_logo/')),
                ('type', models.CharField(blank=True, choices=[('private', 'private'), ('government', 'government'), ('nonprofit', 'nonprofit'), ('collaboration', 'collaboration')], max_length=20)),
                ('objective', models.CharField(max_length=400)),
                ('incorporation_date', models.DateField(blank=True)),
                ('daughter_companies', models.ManyToManyField(blank=True, related_name='daughter_company_Company', to='api.company')),
                ('parent_company', models.ManyToManyField(blank=True, related_name='parent_company_Company', to='api.company')),
                ('reference', models.ManyToManyField(blank=True, related_name='reference_Company', to='api.reference')),
            ],
        ),
        migrations.CreateModel(
            name='CapitalToComapny',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(blank=True, default=0, null=True)),
                ('name', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='name_CapitalToCompany', to='api.company')),
                ('Reference', models.ManyToManyField(blank=True, related_name='reference_CapitalToCompany', to='api.reference')),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200)),
                ('publish_date', models.DateField(auto_now_add=True)),
                ('author_name', models.CharField(blank=True, max_length=100)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='article_thumbnails/')),
                ('images', models.ManyToManyField(blank=True, related_name='images_Article', to='api.image')),
                ('paragraphs', models.ManyToManyField(blank=True, related_name='paragraphs_Article', to='api.paragraph')),
                ('reference', models.ManyToManyField(blank=True, related_name='reference_Article', to='api.reference')),
            ],
        ),
        migrations.CreateModel(
            name='Launch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('launch_date', models.DateField(blank=True)),
                ('mission_length', models.CharField(blank=True, max_length=100)),
                ('launch_vehicle', models.CharField(blank=True, max_length=100)),
                ('objective', models.CharField(blank=True, max_length=400)),
                ('article', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='article_Launch', to='api.article')),
                ('primary_owner', models.ManyToManyField(blank=True, related_name='primary_owner_Launch', to='api.company')),
                ('secondary_owner', models.ManyToManyField(blank=True, related_name='secondary_owner_Launch', to='api.company')),
            ],
        ),
        migrations.CreateModel(
            name='Probe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(blank=True, choices=[('orbiter', 'orbitor'), ('lander', 'lander'), ('rover', 'rover')], max_length=150)),
                ('mass', models.IntegerField(blank=True)),
                ('launch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='launch_Probe', to='api.launch')),
                ('reference', models.ManyToManyField(blank=True, related_name='reference_Probe', to='api.reference')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('objective', models.CharField(blank=True, max_length=400)),
                ('daughter_projects', models.ManyToManyField(blank=True, related_name='daughter_project_Project', to='api.project')),
                ('developers', models.ManyToManyField(blank=True, related_name='developer_Project', to='api.company')),
                ('parent_projects', models.ManyToManyField(blank=True, related_name='parent_project_Project', to='api.project')),
                ('reference', models.ManyToManyField(blank=True, related_name='reference_Project', to='api.reference')),
            ],
        ),
        migrations.AddField(
            model_name='launch',
            name='project',
            field=models.ManyToManyField(blank=True, related_name='project_Launch', to='api.project'),
        ),
        migrations.CreateModel(
            name='NewsStory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('publish_date', models.DateField(auto_now_add=True)),
                ('author_name', models.CharField(blank=True, max_length=100)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='newsstory_thumbnails/')),
                ('images', models.ManyToManyField(blank=True, related_name='images_NewsStory', to='api.image')),
                ('paragraphs', models.ManyToManyField(blank=True, related_name='paragraphs_NewsStory', to='api.paragraph')),
                ('reference', models.ManyToManyField(blank=True, related_name='reference_NewsStory', to='api.reference')),
            ],
        ),
        migrations.AddField(
            model_name='launch',
            name='reference',
            field=models.ManyToManyField(blank=True, related_name='reference_Launch', to='api.reference'),
        ),
        migrations.CreateModel(
            name='CapitalToTechnology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(blank=True, default=0, null=True)),
                ('Reference', models.ManyToManyField(blank=True, related_name='reference_CapitalToTechnology', to='api.reference')),
            ],
        ),
        migrations.CreateModel(
            name='CapitalToProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(blank=True, default=0, null=True)),
                ('name', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='name_CapitalToProject', to='api.project')),
                ('Reference', models.ManyToManyField(blank=True, related_name='reference_CapitalToProject', to='api.reference')),
            ],
        ),
        migrations.CreateModel(
            name='CapitalToProbe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(blank=True, default=0, null=True)),
                ('name', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='name_CapitalToProbe', to='api.probe')),
                ('Reference', models.ManyToManyField(blank=True, related_name='reference_CapitalToProbe', to='api.reference')),
            ],
        ),
        migrations.CreateModel(
            name='CapitalToLaunch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(blank=True, default=0, null=True)),
                ('name', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='name_CapitalToLaunch', to='api.launch')),
                ('Reference', models.ManyToManyField(blank=True, related_name='reference_CapitalToLaunch', to='api.reference')),
            ],
        ),
        migrations.CreateModel(
            name='Capital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('investment', 'investment'), ('grant', 'grant'), ('contract', 'contract')], max_length=20)),
                ('amount', models.IntegerField(blank=True, default=0, null=True)),
                ('date', models.DateField(blank=True)),
                ('status', models.CharField(blank=True, choices=[('investment', 'investment'), ('grant', 'grant'), ('contract', 'contract')], max_length=20)),
                ('capital_to_company', models.ManyToManyField(blank=True, related_name='capital_to_company_Capital', to='api.capitaltocomapny')),
                ('capital_to_launch', models.ManyToManyField(blank=True, related_name='capital_to_launch_Capital', to='api.capitaltolaunch')),
                ('capital_to_probe', models.ManyToManyField(blank=True, related_name='capital_to_probe_Capital', to='api.capitaltoprobe')),
                ('capital_to_project', models.ManyToManyField(blank=True, related_name='capital_to_project_Capital', to='api.capitaltoproject')),
                ('capital_to_technology', models.ManyToManyField(blank=True, related_name='capital_to_technology_Capital', to='api.capitaltotechnology')),
                ('capital_from', models.ManyToManyField(blank=True, related_name='capital_from_Capital', to='api.company')),
                ('reference', models.ManyToManyField(blank=True, related_name='reference_Capital', to='api.reference')),
            ],
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('developer', models.ManyToManyField(blank=True, related_name='developer_Technology', to='api.company')),
                ('project', models.ManyToManyField(blank=True, related_name='project_Technology', to='api.project')),
                ('reference', models.ManyToManyField(blank=True, related_name='reference_Technology', to='api.reference')),
            ],
        ),
        migrations.AddField(
            model_name='probe',
            name='technology',
            field=models.ManyToManyField(blank=True, related_name='technology_Probe', to='api.technology'),
        ),
        migrations.AddField(
            model_name='launch',
            name='technology',
            field=models.ManyToManyField(blank=True, related_name='technology_Launch', to='api.technology'),
        ),
        migrations.AddField(
            model_name='capitaltotechnology',
            name='name',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='name_CapitalToTechnology', to='api.technology'),
        ),
    ]
